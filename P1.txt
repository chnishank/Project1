


------------------------------PROJECT 1--------------------------


Open Terminal or GitBash
     Log in to the VM via SSH on localhost port 2222
	Execute following command and Enter password as [maria_dev]
	$ ssh maria_dev@sandbox-hdp.hortonworks.com -p 2222
	maria_dev@sandbox-hdp.hortonworks.com's password:

     If log in successfully something will be shown as below
         [maria_dev@sandbox-hdp ~]$

Load the movies.csv,ratings.csv and tags.csv into local file system from git repo "https://github.com/chnishank/Project1"
    Execute following command
	[maria_dev@sandbox-hdp ~]$ git clone https://github.com/chnishank/Project1.git

unizp the files
    Execute following commands
        [maria_dev@sandbox-hdp ~]$ cd Project1
	[maria_dev@sandbox-hdp Project1]$ unzip movies.csv
        [maria_dev@sandbox-hdp Project1]$ unzip ratings.csv
        [maria_dev@sandbox-hdp Project1]$ unzip tags.csv


copy movies.csv,ratings.csv and tags.csv into hdfs from local file system
    Execute following commands
	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -mkdir /user/maria_dev/P1
	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -mkdir /user/maria_dev/P1/movies
	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -mkdir /user/maria_dev/P1/ratings
	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -mkdir /user/maria_dev/P1/tags
        [maria_dev@sandbox-hdp Project1]$ hdfs dfs -put movies.csv /user/maria_dev/P1/movies
    	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -put ratings.csv /user/maria_dev/P1/ratings
	[maria_dev@sandbox-hdp Project1]$ hdfs dfs -put tags.csv /user/maria_dev/P1/tags


start the Hive shell
    Execute following command to start
	[maria_dev@sandbox-hdp ~]$ hive

    Execute following commands to create database and tables
	hive> create database P1;
	hive> use P1

	hive> create external table movies(movieid int, title string, genres array< string >)                                                                                   
    	    > row format delimited                                                                                                                                              
            > fields terminated by ','                                                                                                                                          
            > collection items terminated by '|'  
            > location '/user/maria_dev/P1/movies';

 
	hive> create external table ratings(userid int, movieid int, rating float, tstamp string)                          
    	    > row format delimited                                                                                                                                              
    	    > fields terminated by ','                                                                                                                                          
    	    > location '/user/maria_dev/P1/ratings'; 


	hive> create external table tags(userid int, movieid int, tag float, tstamp string)                                                                                   
    	    > row format delimited                                                                                                                                              
    	    > fields terminated by ','                                                                                                                                          
    	    > location '/user/maria_dev/P1/tags'; 




------------------------------PROJECT 1 Exercise Queries--------------------------



01. first 5 entries from movies table
hive> select * from movies limit 5;


02. number of unique movies
hive> select count(distinct title) from movies;


03. summary of ratings data
hive> select r.movieid, m.title, min(r.rating),max(rating),avg(rating) from ratings r, movies m where m.movieid=r.movieid group by r.movieid,m.title limit 10;


04. minimum rating given to a movie
hive> select r.movieid, m.title, min(r.rating) as e from ratings r, movies m where m.movieid=r.movieid group by r.movieid,m.title having e=1 limit 10;


05. maximum rating given to a movie
hive> select r.movieid, m.title, max(r.rating) from ratings r, movies m where m.movieid=r.movieid group by r.movieid,m.title limit 10;



06. is any row null in tags
hive> select count(tag) from tags where tag is NULL or tstamp is NULL or userid is NULL or movieid is NULL;


07. number of unique tags 
hive> select count(distinct tag) from tags;


08. drop null rows from tags and create another table of the resulting rows
hive> create table no_null_tags AS select * from tags where movieid IS NOT NULL AND                                                                                     
    > userid IS NOT NULL AND                                                                                                                                            
    > tag IS NOT NULL AND                                                                                                                                               
    > tstamp IS NOT NULL;    


09. filtering to get the list of drama movies
hive> select title from movies where if(array_contains(genres,'Drama'),title,'')=title limit 5;  


10. total number of drama movies
hive> select count(*) from movies where if(array_contains(genres,'Drama'),title,'')=title;


11. filtering to get the list of comedy movies
hive> select title from movies where if(array_contains(genres,'Comedy'),title,'')=title limit 5; 


12. total no. of comedy movies
hive> select count(*) from movies where if(array_contains(genres,'Comedy'),title,'')=title;


13. search movie id by tag search
hive> select movieid from tags where tag='Disney' limit 5;  


14. displays first 5 data from ratings table
hive> select * from ratings limit 5;


15. merging two tables movies and ratings into a new table without the "timestamp" column from the ratings table.
hive> create table mermov as select r.userid,m.movieid,m.title,m.genres,r.rating from movies m join ratings r on (m.movieid=r.movieid) limit 5; 


16. display high rated movies (rating > 4)
hive> with h_rate as (select movieid,avg(rating) as e from ratings group by movieid) select m.movieid,m.title,e from h_rate c,movies m where c.movieid=m.movieid and e>4
 order by e limit 5;  


17. display low rated movies (rating < 4)
hive> with h_rate as (select movieid,avg(rating) as e from ratings group by movieid) select m.movieid,m.title,e from h_rate c,movies m where c.movieid=m.movieid and e<4
 order by e limit 5;


18. total number of unique movie genres
hive> select count(distinct g) from (select explode(genres) as g from movies) as e;  
 

19. top 25 most rated movies
hive> select m.title, count(r.movieid) as e from movies m, ratings r                                                                                                    
    > where m.movieid=r.movieid group by r.movieid, m.title order by e desc limit 25;


20. slicing out columns to display only title and genres columns from movies table
hive> select title, genres from movies limit 5;


21. extract year from title of the movie
hive> select substr(split(title, ' \\(')[size(split(title, ' \\(')) -1 ],1,4) from movies limit 5;


22. count how many times each of genres occur
hive> select g,count(g) from (select explode(genres) as g from movies) as e group by g;  


23. Which movie received the highest number of ratings?
hive> select m.title, count(r.movieid) as e from movies m, ratings r                                                                                                    
    > where m.movieid=r.movieid group by r.movieid, m.title order by e desc limit 1;


















